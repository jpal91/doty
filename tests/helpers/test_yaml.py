import os
import shutil
import pytest
import yaml

@pytest.fixture(scope='module')
def examples_path():
    examples = os.path.realpath(os.path.join(__file__, '..', '..', '..', 'examples'))
    return examples

@pytest.fixture(scope='module')
def example_cfg(examples_path):
    path = os.path.join(examples_path, 'dotycfg.yml')
    with open(path) as f:
        cfg = yaml.safe_load(f)
    return cfg

@pytest.fixture(scope='module')
def example_lock(examples_path):
    path = os.path.join(examples_path, 'doty_lock.yml')
    with open(path) as f:
        lock = yaml.safe_load(f)
    return lock

@pytest.fixture(scope='module')
def temp_yml_dir(temp_dir, examples_path):
    yml_dir = temp_dir / 'test_yml'
    yml_doty_cfg = yml_dir / '.doty_config'
    yml_dir.mkdir()
    yml_doty_cfg.mkdir()
    shutil.copy(os.path.join(examples_path, 'dotycfg.yml'), yml_doty_cfg)
    shutil.copy(os.path.join(examples_path, 'doty_lock.yml'), yml_doty_cfg)
    os.environ['DOTY_DIR'] = str(yml_dir)
    yield yml_dir
    os.environ['DOTY_DIR'] = str(temp_dir / 'dotfiles')

@pytest.fixture
def get_yaml():
    from doty.helpers.yaml import get_yaml
    return get_yaml

@pytest.fixture
def put_yaml():
    from doty.helpers.yaml import put_yaml
    return put_yaml

def test_get_yaml(temp_yml_dir, example_cfg, example_lock, get_yaml):
    cfg, lock = get_yaml()

    assert cfg == example_cfg
    assert lock == example_lock

def test_get_cfg_yaml(temp_yml_dir, example_cfg, get_yaml):
    cfg, lock = get_yaml(lock=False)

    assert cfg == example_cfg
    assert lock == None

def test_get_lock_yaml(temp_yml_dir, example_lock, get_yaml):
    cfg, lock = get_yaml(cfg=False)

    assert cfg == None
    assert lock == example_lock

def test_put_yaml(temp_yml_dir, put_yaml):
    before = ['- .bashrc', '- .zshrc', '- .zsh_history']
    
    put_yaml(cfg_yml=before, lock_yml=before)

    with open(temp_yml_dir / '.doty_config' / 'dotycfg.yml') as f:
        cfg_yml = yaml.safe_load(f)
    
    with open(temp_yml_dir / '.doty_config' / 'doty_lock.yml') as f:
        lock_yml = yaml.safe_load(f)
    
    assert cfg_yml == before
    assert lock_yml == before

    with open(temp_yml_dir / '.doty_config' / 'doty_lock.yml') as f:
        lock_yml = f.readlines()
    
    assert '# DO NOT TOUCH THIS FILE' in lock_yml[0]
    assert '# This file is automatically generated by doty. Any changes made to this file will be overwritten' in lock_yml[1]
